body {
    font-family: 'Arial', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #fdf0d5;
    color: #c1121f;
    margin: 0;
    text-align: center;
}

.container {
    padding: 30px 40px;
    border-radius: 64px;
    max-height: 100%;
    width: 100%;
}

h1 {
    color: #003049;
    margin-bottom: 20px;
    margin-top: 0;
}

.slot-machine {
    /* margin-bottom: 30px; /* Adjusted if needed, but primarily for space above where the button was */
    perspective: 1000px;
}

.wheel {
    /* Increased size */
    width: 450px;  /* Example: Increased from 300px */
    max-width: 95%; /* Ensure it's responsive */
    height: 120px; /* Example: Increased from 100px */
    background-color: #f77f00;
    border: 4px solid #003049;
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Important to hide parts of text that might overflow during spin */
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 20px;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.2);
    cursor: pointer;
    user-select: none;
}

.wheel.disabled {
    cursor: not-allowed;
    opacity: 0.7;
}

.item-display {
    font-size: 1.8em; /* This can be adjusted if needed, e.g., 2em or 2.2em */
    font-weight: bold;
    color: white;
    padding: 10px 15px; /* Added a bit more horizontal padding */
    text-align: center;
    white-space: wrap; /* Prevent text from wrapping to a new line */
    overflow: hidden;    /* Hide text that doesn't fit */
    text-overflow: ellipsis; /* Add ellipsis (...) if text still overflows the width */
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
}

.item-image-display {
    display: none;
}

/* .selected-food-name styles removed */

.spinning {
    animation: spinAnimation 0.1s linear infinite;
}

@keyframes spinAnimation {
    0% { transform: translateY(-20px); opacity: 0.5; }
    50% { transform: translateY(0px); opacity: 1; }
    100% { transform: translateY(20px); opacity: 0.5; }
}
/* Add these new styles, and adjust existing ones if needed */

body {
    font-family: 'Arial', sans-serif;
    /* ... existing body styles ... */
    position: relative; /* For positioning the gear icon */
}

.settings-gear {
    position: absolute;
    top: 15px;
    right: 20px;
    cursor: pointer;
    z-index: 1001; /* Ensure it's above other content if needed */
    color: #003049; /* Match other accent colors */
}

.container {
    /* ... existing container styles ... */
    margin-top: 60px; /* Add some space below the gear icon area */
}

.wheel {
    width: 450px;
    max-width: 95%;
    height: 120px;
    /* ... existing wheel styles ... */
}

.item-display {
    font-size: 1.8em;
    /* ... existing item-display styles ... */
}

/* Modal Styles */
.modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.5); /* Dim background */
    justify-content: center;
    align-items: center;
}

.modal.show {
    display: flex; /* Use flex to center modal content */
}

.modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 25px 30px;
    border: 1px solid #888;
    width: 80%;
    max-width: 500px;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    color: #333;
    position: relative;
}

.close-button {
    color: #aaa;
    position: absolute;
    top: 10px;
    right: 20px;
    font-size: 28px;
    font-weight: bold;
}

.close-button:hover,
.close-button:focus {
    color: #333;
    text-decoration: none;
    cursor: pointer;
}

.modal-content h2 {
    text-align: center;
    margin-bottom: 20px;
    color: #003049;
}

#categoriesList {
    max-height: 300px;
    overflow-y: auto;
    margin-bottom: 20px;
}

#categoriesList label {
    display: block;
    margin-bottom: 10px;
    font-size: 1.1em;
    cursor: pointer;
}

#categoriesList input[type="checkbox"] {
    margin-right: 10px;
    transform: scale(1.2); /* Make checkbox slightly larger */
}

.modal-button {
    background-color: #c1121f;
    color: white;
    border: none;
    padding: 12px 20px;
    font-size: 1.1em;
    border-radius: 5px;
    cursor: pointer;
    display: block;
    width: 100%;
    transition: background-color 0.3s ease;
}

.modal-button:hover {
    background-color: #a00f1a;
}

#animationContainer {
    position: fixed; /* Stays in place even if page scrolls (though your page might not scroll) */
    top: 0;
    left: 0;
    width: 100vw; /* Full viewport width */
    height: 100vh; /* Full viewport height */
    pointer-events: none; /* Allows clicks to go through to elements behind it */
    z-index: 9999;      /* Very high z-index to be on top of most things */
    overflow: hidden;     /* Prevent scrollbars if tacos animate slightly outside bounds */
}

.falling-taco {
    position: absolute; /* Positioned relative to #animationContainer */
    top: -70px; /* Start above the visible screen */
    width: 60px;  /* Adjust size of the taco image as needed */
    height: 45px; /* Adjust size of the taco image as needed */
    background-image: url('images/taco.png'); /* Path to your taco image */
    background-size: contain;
    background-repeat: no-repeat;
    /* 'animation' property will be set by JavaScript to trigger and customize */
    will-change: transform, opacity; /* Hint for browser performance */
}

/* Define different falling animations */
@keyframes fallAndRotate {
    0% {
        transform: translateY(0vh) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(110vh) rotate(720deg); /* Fall past the bottom + some rotation */
        opacity: 1; /* Or 0 if you want them to fade out */
    }
}

@keyframes fallAndDrift {
    0% {
        transform: translateY(0vh) translateX(0px) rotate(-20deg);
        opacity: 1;
    }
    50% {
        transform: translateX(50px) rotate(180deg);
    }
    100% {
        transform: translateY(110vh) translateX(-30px) rotate(380deg);
        opacity: 1;
    }
}

@keyframes simpleFall {
    0% {
        transform: translateY(0vh) rotate(10deg);
        opacity: 1;
    }
    100% {
        transform: translateY(110vh) rotate(50deg);
        opacity: 1;
    }
}